{
    "name": "bitbag/sylius-callout-plugin",
    "type": "sylius-plugin",
    "description": "Add callouts to your Sylius products",
    "keywords": [
        "sylius",
        "sylius-plugin",
        "setono",
        "callout"
    ],
    "license": "MIT",
    "require": {
        "php": "^7.3 || ^7.4 || ^8.0",
        "setono/doctrine-orm-batcher-bundle": "^0.3.1",
        "sylius/sylius": "~1.9.0 || ~1.10.0 || ~1.11.0",
        "symfony/messenger": "^4.4 || ^5.0",
        "thecodingmachine/safe": "^1.0"
    },
    "require-dev": {
        "behat/behat": "^3.7",
        "behat/mink-selenium2-driver": "^1.4",
        "dmore/behat-chrome-extension": "^1.3",
        "dmore/chrome-mink-driver": "^2.7",
        "friends-of-behat/mink": "^1.8",
        "friends-of-behat/mink-browserkit-driver": "^1.4",
        "friends-of-behat/mink-extension": "^2.4",
        "friends-of-behat/page-object-extension": "^0.3",
        "friends-of-behat/suite-settings-extension": "^1.0",
        "friends-of-behat/symfony-extension": "^2.1",
        "friends-of-behat/variadic-extension": "^1.3",
        "lakion/mink-debug-extension": "^2.0.0",
        "phpspec/phpspec": "^7.0",
        "phpstan/extension-installer": "^1.0",
        "phpstan/phpstan": "0.12.88",
        "phpstan/phpstan-doctrine": "0.12.37",
        "phpstan/phpstan-strict-rules": "^0.12.0",
        "phpstan/phpstan-webmozart-assert": "0.12.12",
        "phpunit/phpunit": "^9.5",
        "polishsymfonycommunity/symfony-mocker-container": "^1.0",
        "sylius-labs/coding-standard": "^4.0",
        "symfony/browser-kit": "^4.4 || ^5.2",
        "symfony/debug-bundle": "^4.4 || ^5.2",
        "symfony/dotenv": "^4.4 || ^5.2",
        "symfony/intl": "^4.4 || ^5.2",
        "symfony/web-profiler-bundle": "^4.4 || ^5.2",
        "vimeo/psalm": "^4.7"
    },
    "config": {
        "sort-packages": true,
        "allow-plugins": {
            "symfony/thanks": false,
            "dealerdirect/phpcodesniffer-composer-installer": false,
            "phpstan/extension-installer": false
        }
    },
    "extra": {
        "branch-alias": {
            "dev-master": "1.0-dev"
        }
    },
    "autoload": {
        "psr-4": {
            "Setono\\SyliusCalloutPlugin\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "Tests\\Setono\\SyliusCalloutPlugin\\": [
                "tests/",
                "tests/Application/src"
            ]
        },
        "classmap": [
            "tests/Application/Kernel.php"
        ]
    },
    "prefer-stable": true,
    "scripts": {
        "all": [
            "@checks",
            "@tests"
        ],
        "analyse": [
            "vendor/bin/phpstan analyse -c phpstan.neon -l max src tests/Application/src"
        ],
        "assets": [
            "@ensure-assets-installed",
            "@ensure-assets-compiled"
        ],
        "behat": [
            "SYMFONY_ENV=test composer ensure-database-ready",
            "SYMFONY_ENV=test composer ensure-env-copied",
            "vendor/bin/behat --tags=\"~@javascript\" --no-interaction --format=progress"
        ],
        "check-style": "vendor/bin/ecs check src tests/Application/src",
        "checks": [
            "composer validate --strict",
            "composer normalize --dry-run",
            "@check-style",
            "@analyse"
        ],
        "ensure-assets-compiled": "[[ -d tests/Application/public/assets ]] || (cd tests/Application && yarn build && composer ensure-env-copied && bin/console assets:install public -e ${SYMFONY_ENV:-'dev'})",
        "ensure-assets-installed": "[[ -d tests/Application/node_modules ]] || (cd tests/Application && yarn install)",
        "ensure-database-created": "composer ensure-env-copied && (cd tests/Application && bin/console doctrine:database:create --if-not-exists -e ${SYMFONY_ENV:-'dev'})",
        "ensure-database-ready": [
            "@ensure-database-created",
            "@ensure-schema-updated"
        ],
        "ensure-env-copied": "([[ ${SYMFONY_ENV:-'dev'} == 'dev' ]] && composer ensure-env-dev-copied) || ([[ ${SYMFONY_ENV:-'dev'} == 'test' ]] && composer ensure-env-test-copied) || echo 'Unknown environment ${SYMFONY_ENV}'",
        "ensure-env-dev-copied": "(cd tests/Application && ([[ -f .env.dev.local ]] || cp .env  .env.dev.local))",
        "ensure-env-test-copied": "(cd tests/Application && ([[ -f .env.test.local ]] || cp .env.test .env.test.local))",
        "ensure-schema-updated": "composer ensure-env-copied && (cd tests/Application && bin/console doctrine:schema:update --force -e ${SYMFONY_ENV:-'dev'})",
        "ensure-vendors-installed": "[[ -f vendor/autoload.php ]] || php -d memory_limit=-1 /usr/local/bin/composer install",
        "fix-style": "vendor/bin/ecs check src tests/Application/src --fix",
        "fixtures": [
            "@ensure-database-ready",
            "(cd tests/Application && bin/console sylius:fixtures:load --no-interaction -e ${SYMFONY_ENV:-'dev'})"
        ],
        "phpspec": "vendor/bin/phpspec run -vvv",
        "phpunit": "vendor/bin/phpunit",
        "run": [
            "@ensure-env-copied",
            "(cd tests/Application && bin/console server:run -d public -e ${SYMFONY_ENV:-'dev'})"
        ],
        "tests": [
            "@phpspec",
            "@phpunit",
            "@behat"
        ],
        "try": [
            "@ensure-vendors-installed",
            "@assets",
            "@fixtures",
            "@run"
        ]
    }
}
